# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build Image
        run: docker build -f Home-Tab/Home-Tab/Dockerfile -t orangenal/home-tab:latest Home-Tab
      -
        name: Push Image
        run: docker push orangenal/home-tab:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: ssh-pipeline
      # You may pin to the exact commit or the version.
      # uses: cross-the-world/ssh-pipeline@7f022867934a210af826af99ef80d96f03a094d5
        uses: cross-the-world/ssh-pipeline@v1.2.0
        with:
          # ssh remote host
          host: ${{ secrets.HOST }}
          # ssh remote port
          port: ${{ secrets.PORT }}
          # ssh remote user
          user: ${{ secrets.USERNAME }}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          key: ${{ secrets.KEY }}
          script: |
            cd /home/orangenal/Home-Tab
            git pull
            docker-compose down
            docker-compose up
      
        #name: Connect and start
        #uses: appleboy/ssh-action@master
        #with:
          #host: ${{ secrets.HOST }}
          #username: ${{ secrets.USERNAME }}
          #key: ${{ secrets.KEY }}
          #port: ${{ secrets.PORT }}
          #script: |
            #cd /home/orangenal/Home-Tab
            #git pull
            #docker-compose up
